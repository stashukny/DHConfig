@model DHConfig.DIM_FIELD

@{
    ViewBag.Title = "Edit";
}


<head>
    <meta charset="utf-8">
    <title>jQuery UI Dialog - Default functionality</title>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
    <script src="http://code.jquery.com/jquery-1.10.2.js"></script>
    <script src="http://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <link rel="stylesheet" href="/resources/demos/style.css">

</head>

<h2>Edit</h2>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Dimension Field</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.CONFIG_COMMON_NAME, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.CONFIG_COMMON_NAME)
                @Html.HiddenFor(model => model.CONFIG_COMMON_NAME)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DIM_COMMON_NAME, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">                
                @Html.DropDownList("DIM_COMMON_NAME", null, htmlAttributes: new { @class = "form-control" })
                @Html.HiddenFor(model => model.DIM_COMMON_NAME)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DIM_FIELD_NAME, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">                
                @Html.EditorFor(model => model.DIM_FIELD_NAME, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.DIM_FIELD_NAME)
            </div>
        </div>


@section MyScripts{
        <script type="text/javascript">
            $(document).ready(function () {
                function updateClean() {
                    var raw = $("#DIM_FIELD_NAME").val();
                    var clean = raw + "_CLEAN";                                        
                    $("#DIM_FIELD_NAME_CLEAN").val(clean);
                }
                $(document).on("change, keyup", "#DIM_FIELD_NAME", updateClean);
            });          
        </script>
        }


        <div class="form-group">
            @Html.LabelFor(model => model.DIM_FIELD_NAME_CLEAN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DIM_FIELD_NAME_CLEAN, new { htmlAttributes = new { @class = "form-control", @readonly="readonly" } })                
                @Html.ValidationMessageFor(model => model.DIM_FIELD_NAME_CLEAN, "", new { @class = "text-danger" })                
            </div>
        </div>



        @{
            var input = Html.TextBoxFor(m => m.DIM_FIELD_NAME).ToHtmlString();            
        }


            @*<div class="form-group">
                @Html.LabelFor(model => model.DIM_DATA_TYPE, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DIM_DATA_TYPE, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DIM_DATA_TYPE, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.DIM_DATA_TYPE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.DIM_DATA_TYPE, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.DropDownList("DIM_DATA_TYPE", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.DropDownListFor(m => m.DIM_DATA_TYPE, (SelectList)ViewBag.datatypes, new { @class = "form-control" })                       
                @Html.ValidationMessageFor(model => model.DIM_DATA_TYPE, "", new { @class = "text-danger" })
            </div>
        </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DIM_FIELD_FEATURE, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.ListBoxFor(x => x.SelectedItems, (MultiSelectList)ViewBag.listFeatures, new { size = 10, width=500 })
                    </div>
                </div>

        @if (TempData["FeaturesInvalid"] != null)
        {
            <script>                                
                alert('This feature combination is invalid.');                
            $(function () {
                $("#dialog").dialog();
            });
            </script>
        }
        
        @*<div id="dialog" title="Basic dialog">
            <p>This is the default dialog which is useful for displaying information. The dialog window can be moved, resized and closed with the 'x' icon.</p>
        </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.DERIVED_CONFIGURATION, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DERIVED_CONFIGURATION, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DERIVED_CONFIGURATION, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index", new { SelectedClient = Request.QueryString["sClient"] })
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
